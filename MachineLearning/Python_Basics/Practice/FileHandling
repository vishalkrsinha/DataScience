#######Writing a file.........
f = open("C:\\Users\\vk4cs\\OneDrive\\Desktop\\FirstPythonFile.txt","w")#"w": Write mode, "a": Append mode, "r": Read mode (By default option)
#Write, Append mode creates a new file, if not already exists
f.write("Hello Python World!\nThis is my first file here...") #write method writes the string & returns the no. of bytes it has written like 12, 25 etc.
f.close();

#######Reading a file...........
f = open("C:\\Users\\vk4cs\\OneDrive\\Desktop\\FirstPythonFile.txt","r")
f.tell()
f.readline()
f.tell()
f.readline()
f.tell()
f.readlines()
f.tell()
f.read()#output as string: e.g. 'Hello world!\nHow are you?'
f.seek(0)
f.read()
f.readlines() #Returns a list of strings, different to read() that returns just the string. e.g. ['Hello world!\n','How are you?']
f.seek(0)
f.readlines()
f.seek(0)
f.read(10)
f.close()

###################################Copying & Moving Files & Folders...
import shutil
shutil.copy(r'C:\Users\vk4cs\OneDrive\Desktop\myPlot.png',r'C:\Users\vk4cs\OneDrive\Desktop\Delicious') #Copies a file from source to destination. output: 'C:\\Users\\vk4cs\\OneDrive\\Desktop\\Delicious\\myPlot.png'

shutil.copy(r'C:\Users\vk4cs\OneDrive\Desktop\myPlot.png',r'C:\Users\vk4cs\OneDrive\Desktop\Delicious\myPPPPPlot.png') 
#Copies a file from source to destination with different name. output: 'C:\\Users\\vk4cs\\OneDrive\\Desktop\\Delicious\\myPPPPPlot.png'

shutil.copytree(r'C:\Users\vk4cs\OneDrive\Desktop\Delicious',r'C:\Users\vk4cs\OneDrive\Desktop\Delicious_Backup') 
#Copies a directory from source to destination. output: 'C:\\Users\\vk4cs\\OneDrive\\Desktop\\Delicious_Backup'

shutil.move(r'C:\Users\vk4cs\OneDrive\Desktop\test.txt',r'C:\Users\vk4cs\OneDrive\Desktop\Delicious') 
#Cut & paste a file from source to destination. output: 'C:\\Users\\vk4cs\\OneDrive\\Desktop\\Delicious\\test.txt'

shutil.move(r'C:\Users\vk4cs\OneDrive\Desktop\Delicious\test.txt',r'C:\Users\vk4cs\OneDrive\Desktop\Delicious\Test1.txt') 
#Renaming a file. output: 'C:\\Users\\vk4cs\\OneDrive\\Desktop\\Delicious\\test1.txt'

######Renaming/Removing files.........
import os
os.rename("C:\\Users\\vk4cs\\OneDrive\\Desktop\\FirstPythonFile.txt","C:\\Users\\vk4cs\\OneDrive\\Desktop\\myFirstPythonFile.txt")

os.remove("C:\\Users\\vk4cs\\OneDrive\\Desktop\\myFirstPythonFile.txt")

######Playing with Folders............
os.getcwd() #Getting current working directly
os.chdir("C:\\Users\\vk4cs\\OneDrive\\Desktop")
os.getcwd()

f = open("tmp.txt","w")
f.close()
os.mkdir("PythonTestFolder") #Making a new directory
os.rename("tmp.txt","PythonTestFolder\\tmp.txt") #Renaming a directory
os.chdir("PythonTestFolder") 
os.getcwd()
os.chdir("C:\\Users\\vk4cs\\OneDrive\\Desktop\\")
os.getcwd()
os.remove("PythonTestFolder\\tmp.txt")
os.rmdir("PythonTestFolder")

os.path.join('folder1','folder2','folder3','file.png') #os.path.join() method can also join strings to create a path string.
os.path.sep #Tells what separator is used to combine a path

os.getcwd() #Gives current working directory
os.chdir('c:\\') #Changes the working directory
os.getcwd()

DELETE_THIS_FILE('sd.txt') #Compiler will assume the file here presents in current working directory

os.chdir(r'C:\Users\vishalk\Desktop')
os.getcwd()

os.path.abspath('test.txt') #output: 'C:\\Users\\vishalk\\Desktop\\test.txt'
os.path.abspath('..\\..\\..\\..\\test.txt') #output: 'C:\\test.txt' 
os.path.abspath('..\\..\\..\\..\\..\\..\\..\\test.txt') #output: 'C:\\test.txt' . If number of ..\\ is more than pointing to root folder, it still points the root folder & no exception.

os.path.isabs('..\\..\\test.txt') #output: False, as it doesn't contain the root folder
os.path.isabs('c:\\folder1\\folder3')#output: True, as it contains the root folder

os.path.relpath(r'c:\folder1\folder2\spam.png',r'c:\folder1')

###Getting directory name (string excluding filename)....
os.path.dirname(r'c:\folder1\folder2\spam.png') #output: 'c:\\folder1\\folder2'
os.path.basename(r'c:\folder1\folder2\spam.png') #output: 'spam.png'

os.path.exists(r'c:\folder1\folder2\spam.png') #False

os.path.isfile(r'C:\Users\vishalk\Desktop\test.txt') #True, but file must physically exist at the mentioned path
os.path.isfile(r'C:\Users\vishalk\Desktop') #False, as it's a folder not a file 

os.path.isdir(r'C:\Users\vishalk\Desktop') #True, but dir must physically exist at the mentioned path
os.path.isdir(r'C:\Users\vishalk\Desktop\test.txt') #False, as it's a file not a folder 

os.path.getsize(r'C:\Users\vishalk\Desktop\test.txt') #get size in bytes

os.listdir(r'C:\Users\vishalk\Desktop') #Lists all files & directories inside the mentioned path

#Finding the total size of all files(not the folders) in a folder
totalSize = 0
for filename in os.listdir(r'C:\Users\vishalk\Desktop'):
    if os.path.isfile(os.path.join(r'C:\Users\vishalk\Desktop',filename)):
        continue
    totalSize = totalSize + os.path.getsize(os.path.join(r'C:\Users\vishalk\Desktop',filename))


os.makedirs(r'c:\delecious\walnut\wafles') # Creates the directory...

############Tip: The . folder represents "this folder", the ..folder represents "the parent folder".


########Pickling: Writing/Reading an object to a file..............
import pickle
dict1 = {1:"One",2:"Two",3:"Three"}
os.getcwd()
f = open("data.pickle","wb")
pickle.dump(dict1,f)
f.close()

f = open("data.pickle","rb")
pickle.load(f)
f.seek(0)
dic2 = pickle.load(f)
dic2
dic2[2]


##############################Shelve Module........
#The shelve module can store Python values in a binary file.
import shelve
shelfFile = shelve.open('mydata')
shelfFile['cats'] = ['Zophie','Pooka','Simon','Fat-tail','Cleo'] #It's kind of a dictionary with key-value pair
shelfFile.close() #shelve creates 3 binary files: .bak, .dat, & .dir

import os
os.getcwd()

#shelve.open() returns a dictionary-like shelf value.
shelfFile = shelve.open('mydata')
shelfFile['cats'] #Output: ['Zophie','Pooka','Simon','Fat-tail','Cleo']

list(shelfFile.keys()) #output: ['cats']
list(shelfFile.values()) #output: [['Zophie','Pooka','Simon','Fat-tail','Cleo']]
shelfFile.close()

###########################Deleting Files.............
#os.unlink() will permanently delete a file.
import os
os.unlink(r'C:\Users\vk4cs\OneDrive\Desktop\Delicious_Backup\Test1.txt')

#os.rmdir() will delete an empty folder
os.rmdir(r'C:\Users\vk4cs\OneDrive\Desktop\Delicious_Backup') #OSError: WinError 145 as directory not empty

#shutil.rmtree() will delete a complete folder & all it's contents. So, be careful while using this function.
import shutil
shutil.rmtree(r'C:\Users\vk4cs\OneDrive\Desktop\Delicious_Backup') #Permanent deletion of entire folder

#e.g.
for filename in os.listdir(r'C:\Users\vk4cs\OneDrive\Desktop\Delicious'):
    if filename.endswith('.txt'):
        print (filename)
        os.unlink(filename)

#send2trash.send2trash() will send a file/folder to the recyclebin
#Install send2trash through conda prompt(Admin mode) as: conda install sen2trash
import send2trash
send2trash.send2trash(r'C:\Users\vk4cs\OneDrive\Desktop\Delicious\Test1.txt')


######################################################################################################################
#######################################      Walking a Directory..........
import os
import shutil

#os.walk() returns 3 itesm Folder, SubFolders, & Files...
for folder, subfolders, files in os.walk(r'F:\Machine Learnings\ExamplesFromWeb'): 
    print ('Folder: '+folder)
    print ('Subfolder in Folder: '+folder+' are: '+str(subfolders))
    print ('Files in Folder: '    +folder+' are: '+str(files))
    print()

    for subfolder in subfolders:
        if 'fish' in subfolder:
            os.rmdir(subfolder)
            
    for file in files:
        if(file.endswith('.py')):
            shutil.copy(os.path.join(folder,file),os.path.join(folder,file+'.backup'))
